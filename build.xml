<project name="MealCraft" default="dist" basedir=".">
    <description>
        MealCraft xml file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="run" depends="compile" description="runs MealCraftTester">
    <java classname="MealCraftTester" classpath="./build"/>
  </target>
<target name="test" depends="compile">
    <junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="junit-4.19.jar"/>
         <pathelement location="."/>
       </classpath>
       <batchtest fork="yes">
          <fileset dir=".">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>
        <formatter type="plain" usefile="false" />
    </junit>
</target>

  
</project>